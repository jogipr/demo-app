{"version":3,"sources":["components/style.less","components/ScoreCard.js","containers/ScoreCardContainer.js","components/MatchSchedule.js","components/ScheduleMatch.js","services/api.js","components/Players.jsx","components/AppNavigation.js","redux/matchesReducer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","ScoreCard","props","classes","Card","className","CardContent","Typography","color","variant","ScoreCardContainer","Grid","container","spacing","item","xs","sm","theme","width","backgroundColor","palette","background","paper","SimpleList","matches","Table","table","TableHead","TableRow","TableCell","align","TableBody","map","match","key","team1","component","scope","team2","venue","date","row","info","dark","initialState","scheduleReducer","state","action","type","value","ScheduleMatch","useReducer","dispatch","useState","teamError","setTeamError","handleTeamChange","e","target","id","TextField","label","onChange","error","Button","onClick","submitMatch","headers","getPlayerByTeam","team","a","window","fetch","mode","method","res","json","font","Players","players","setPlayers","useEffect","fetchData","List","player","ListItem","ListItemAvatar","Avatar","ListItemText","primary","name","secondary","defaultProps","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","flexGrow","SimpleTabs","React","setValue","handleChange","event","newValue","AppBar","position","Tabs","aria-label","Tab","matchesReducer","App","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d30714c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/style.287dc17e.less\";","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nfunction ScoreCard(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography className={classes.title} color=\"textSecondary\">\r\n                   England vs India\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                   Eng - 350/5  from 50 overs \r\n                   <br/>\r\n                   Ind - 355 /2 from 50 overs\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    India wins by 5 runs\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nScoreCard.propTypes = {\r\n\r\n}\r\n\r\nexport default ScoreCard\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ScoreCard  from  \"../components/ScoreCard\";\r\n\r\nfunction ScoreCardContainer(props) {\r\n    return (\r\n        <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <ScoreCard ></ScoreCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <ScoreCard ></ScoreCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <ScoreCard ></ScoreCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <ScoreCard ></ScoreCard>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nScoreCardContainer.propTypes = {\r\n\r\n}\r\n\r\nexport default ScoreCardContainer\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function SimpleList({matches}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Teams</TableCell>\r\n                        <TableCell align=\"right\">Venue</TableCell>\r\n                        <TableCell align=\"right\">Schedule Date</TableCell>                    \r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {matches.map(match => (\r\n                    <TableRow key={match.team1}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {match.team1} vs { match.team2}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{match.venue}</TableCell>\r\n                        <TableCell align=\"right\">{match.date}</TableCell>\r\n                    </TableRow>\r\n                ))}\r\n                </TableBody>\r\n                </Table>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useReducer, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {\r\n//     MuiPickersUtilsProvider,\r\n//     KeyboardDatePicker\r\n// } from '@material-ui/pickers';\r\nimport \"./style.less\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    row: {\r\n        margin: '8px'\r\n    },\r\n    theme: {\r\n        backgroundColor: theme.palette.info.dark\r\n    }\r\n}));\r\n\r\nconst initialState = {\r\n    team1: '',\r\n    team2: '',\r\n    venue: '',\r\n    date: \"Today\"\r\n}\r\n\r\nconst scheduleReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_TEAM1':\r\n            return {\r\n                ...state,\r\n                team1: action.value\r\n            }\r\n        case 'SET_TEAM2':\r\n            return {\r\n                ...state,\r\n                team2: action.value\r\n            }\r\n        case 'SET_VENUE':\r\n            return {\r\n                ...state,\r\n                venue: action.value\r\n            }\r\n\r\n        case 'SET_DATE':\r\n            return {\r\n                ...state,\r\n                date: action.value\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction ScheduleMatch(props) {\r\n    const classes = useStyles();\r\n    const [state, dispatch] = useReducer(scheduleReducer, initialState);\r\n    const [teamError, setTeamError] = useState(false)\r\n\r\n    const handleTeamChange = (e) => {\r\n        const { target: { id, value } } = e;\r\n        if (id === \"team1\") {\r\n            dispatch({\r\n                type: \"SET_TEAM1\",\r\n                value\r\n            })\r\n        }\r\n        if (id === \"team2\") {\r\n            dispatch({\r\n                type: \"SET_TEAM2\",\r\n                value\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleVenueChange = (e) => {\r\n        const { target: { id, value } } = e;\r\n        dispatch({\r\n            type: \"SET_VENUE\",\r\n            value\r\n        })\r\n    }\r\n\r\n    const handleScheduleChange = (e) => {\r\n        const { target: { id, value } } = e;\r\n        dispatch({\r\n            type: \"SET_DATE\",\r\n            value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (!state.team1) {\r\n            setTeamError(true);\r\n            return;\r\n        }\r\n        props.submitMatch(state)\r\n    }\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <div className={classes.row}>\r\n                    <TextField\r\n                        id=\"team1\"\r\n                        label=\"Team 1\"\r\n                        variant=\"outlined\"\r\n                        value={state.team1}\r\n                        onChange={handleTeamChange}\r\n                        error={teamError}\r\n                    />\r\n                    <span>vs</span>\r\n                    <TextField\r\n                        id=\"team2\"\r\n                        label=\"Team 2\"\r\n                        variant=\"outlined\"\r\n                        value={state.team2}\r\n                        onChange={handleTeamChange}\r\n                    />\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"Venue\"\r\n                        variant=\"outlined\"\r\n                        value={state.venue}\r\n                        onChange={handleVenueChange}\r\n                    />\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <TextField\r\n                        id=\"schedule-date\"\r\n                        label=\"Schedule Date\"\r\n                        variant=\"outlined\"\r\n                        value={state.date}\r\n                        onChange={handleScheduleChange}\r\n                    />\r\n                </div>\r\n                {/* <div>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Date picker inline\"\r\n                        value={state.date}\r\n                        onChange={handleScheduleChange}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                    </MuiPickersUtilsProvider>\r\n                </div> */}\r\n                <div className={classes.row}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleSubmit}\r\n                        className={classes.theme}\r\n                    >\r\n                        Submit\r\n                </Button>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nScheduleMatch.propTypes = {\r\n\r\n}\r\n\r\nexport default ScheduleMatch\r\n","\r\nconst URL = \"http://localhost:8080/routes/team/player\";\r\nconst headers={\r\n    'Accept':\"application/json\",\r\n    'Content-Type': 'application/json'\r\n}\r\n\r\nconst makeRequest=async({url,method,data,headers,...other})=>{\r\n    const res= await window.fetch(url,{\r\n        method,\r\n        headers,\r\n        mode: 'cors',\r\n        data\r\n        \r\n    });\r\n    return res.json();\r\n}\r\n\r\nexport const getPlayerByTeam=async(team)=>{\r\n   const res= await window.fetch(URL,{\r\n       headers:headers,\r\n       mode: 'cors',\r\n       method: \"GET\"\r\n   });\r\n   return res.json();\r\n}\r\n\r\nexport default  getPlayerByTeam;","import React, { useEffect, useState, Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image'\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getPlayerByTeam } from '../services/api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title:{\r\n        font:14\r\n    }\r\n}));\r\n\r\nconst Players = (props) => {\r\n    const classes = useStyles();\r\n    const [players, setPlayers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const res = await getPlayerByTeam(\"\");\r\n            setPlayers(res);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <List className={classes.root}>\r\n                {players && players.map(player =>\r\n                    <ListItem key={player.id}>\r\n                        <ListItemAvatar>\r\n                            <Avatar>\r\n                                <ImageIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={player.name}\r\n                            secondary={player.team}\r\n                        />\r\n                        <Typography className={classes.title} color=\"textSecondary\">\r\n                            Some text about player,Some text about player\r\n                        </Typography>\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nPlayers.propTypes = {\r\n\r\n}\r\n\r\nPlayers.defaultProps = {\r\n\r\n}\r\n\r\nexport default Players\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ScoreCardContainer from '../containers/ScoreCardContainer';\r\nimport MatchSchedule from './MatchSchedule';\r\nimport ScheduleMatch from \"./ScheduleMatch\";\r\nimport Players from './Players';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  theme:{\r\n      backgroundColor:theme.palette.info.dark\r\n  }\r\n}));\r\n\r\nexport default function SimpleTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.theme} >\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n            Cricket Application\r\n          </Typography> \r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"Live Scores\" {...a11yProps(0)} />\r\n          <Tab label=\"Schedule\" {...a11yProps(1)} />\r\n          <Tab label=\"Teams\" {...a11yProps(2)} />\r\n          <Tab label=\"Players\" {...a11yProps(3)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ScoreCardContainer/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <MatchSchedule\r\n            matches={props.matches}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <ScheduleMatch\r\n            submitMatch={(state)=>{\r\n                handleChange(\"\",1);\r\n                props.submitMatch(state)\r\n            }}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <Players/>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","export const initialState=[\r\n    {\r\n        team1:\"England\",\r\n        team2:\"India\",\r\n        venue:\"Delhi\",\r\n        date:\"some date\"\r\n    },\r\n    {\r\n        team1:\"Australia\",\r\n        team2:\"India\",\r\n        venue:\"Pune\",\r\n        date:\"some date\"\r\n    }\r\n]\r\n\r\nexport const matchesReducer=(state,action)=>{\r\n    switch(action.type){\r\n        case 'SET_MATCH':\r\n            return [\r\n                ...state,\r\n                action.value\r\n            ]\r\n        \r\n        default:\r\n             return state;\r\n    }\r\n}\r\n\r\nexport default {\r\n    matchesReducer,\r\n    initialState\r\n}\r\n","import React,{useReducer} from 'react';\r\nimport SimpleTabs from './components/AppNavigation';\r\nimport { initialState,matchesReducer } from \"./redux/matchesReducer\"\r\nimport \"./App.css\"\r\n\r\nconst  App=()=> {\r\n \r\n  const [state,dispatch]  = useReducer(matchesReducer,initialState)\r\n  const handleSubmitMatch=(match)=>{\r\n    dispatch({\r\n      type:\"SET_MATCH\",\r\n      value:match\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <SimpleTabs\r\n        matches={state}\r\n        submitMatch={handleSubmitMatch}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}